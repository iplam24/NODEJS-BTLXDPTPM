const session = require('express-session');
const {switchRed} = require('../migration/userRole');
const { addCarDB,getAllCar,searchCar,getOneDetails,getOneCar } = require('../models/productDAO');


const {getUserAccount,checkUser,createUser,getUserRole
    ,checkUserEmail,getRepassCode,guiEmail,pullCode,
    setNewPass} = require('../models/userDAO');
//lay ve trang chu
const getHomePage =async (req,res)=>{
    // try {
    //     let pool = await connectDB();
    //     let result = await pool.request().query('SELECT * FROM tbl_users');
    //     console.log('‚úÖ D·ªØ li·ªáu t·ª´ database:', result.recordset);
    //     res.send(result.recordsets);
    // } catch (err) {
    //     res.send('L·ªói k·∫øt n·ªëi database');
    // }
    res.render('MainPage');
}

//api dung de dang nhap
const logInserver=async(req,res)=>{
    let usernameLogin = req.body.usernameLogin;
    let passwordLogin = req.body.passwordLogin;
 
     //Ki·ªÉm tra xem t√†i kho·∫£n v√† m·∫≠t kh·∫©u c√≥ ƒë·ªÉ tr·ªëng hay kh√¥ng
    if (!usernameLogin || !passwordLogin) {
     return res.send(`<script>
         alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
         window.location.href = "/dangnhap"; 
     </script>`);
    }
    try{
        let user = await getUserAccount(usernameLogin,passwordLogin);
        if(!user){
            return res.render("login",{
                message:"T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c!",
                oldData:{usernameLogin}
            });
        }

        //l·∫•y v·ªÅ role c·ªßa userLogin
        let role = await getUserRole(usernameLogin);
        if(role==null){
            return render("login",{
                message:"Kh√¥ng t√¨m th·∫•y vai tr√≤ c·ªßa t√†i kho·∫£n n√†y!",
                oldData:{usernameLogin}
            });
        }

        //Th√¥ng b√°o v·ªÅ server
        console.log(`User "${usernameLogin}" ƒëƒÉng nh·∫≠p v·ªõi vai tr√≤ - ${role}`);

        //l∆∞u session
        req.session.user={usernameLogin,role};
        
        req.session.save(() => {
            switchRed(role, usernameLogin, res);
        });

       

        } catch (err) {
            console.error("‚ö† L·ªói h·ªá th·ªëng:", err);
            return res.send(`<script>
                alert("L·ªói h·ªá th·ªëng! Vui l√≤ng th·ª≠ l·∫°i.");
                window.location.href = "/dangnhap";
            </script>`);
        };
    }

 
 const postCreateNewUser = async(req,res)=>{
    let { username, password, repassword, myname, email, phone, address } = req.body;
    // Ki·ªÉm tra d·ªØ li·ªáu nh·∫≠p v√†o
    if (!username || !password || !repassword) {
        return res.render("signup", { 
            message: "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!", 
            oldData: { username, myname, email, phone, address } 
        });
    }

    if (password !== repassword) {
        return res.render("signup", { 
            message: "M·∫≠t kh·∫©u kh√¥ng tr√πng kh·ªõp!", 
            oldData: { username, myname, email, phone, address } 
        });
    }

    try {
        // Ki·ªÉm tra username ƒë√£ t·ªìn t·∫°i ch∆∞a
        let userExists = await checkUser(username);
        if (userExists) {
            return res.render("signup", { 
                message: "T√†i kho·∫£n ƒë√£ t·ªìn t·∫°i, vui l√≤ng s·ª≠ d·ª•ng t√†i kho·∫£n kh√°c!", 
                oldData: { username, myname, email, phone, address } 
            });
        }
         // T·∫°o ng∆∞·ªùi d√πng m·ªõi
         await createUser(username, password, myname, email, phone, address,2);
         console.log("‚úÖ ƒêƒÉng k√Ω th√†nh c√¥ng ng∆∞·ªùi d√πng m·ªõi:", username);
 
         return res.send(`<script>
             alert("ƒêƒÉng k√Ω t√†i kho·∫£n th√†nh c√¥ng! ƒêang chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p");
             window.location.href = "/dangnhap"; 
         </script>`);
    }catch (err) {
    console.error("‚ö† L·ªói h·ªá th·ªëng:", err);
    return res.send(`<script>
        alert("L·ªói h·ªá th·ªëng! Vui l√≤ng th·ª≠ l·∫°i.");
        window.location.href = "/dangky"; 
    </script>`);
}
}
const getCar=async(req,res)=>{
    try {
        const cars = await getAllCar();
        res.render("sanpham", { cars });  // üü¢ Truy·ªÅn d·ªØ li·ªáu xe v√†o view
    } catch (error) {
        console.error("‚ùå L·ªói khi hi·ªÉn th·ªã danh s√°ch xe:", error);
        res.status(500).send("L·ªói khi hi·ªÉn th·ªã danh s√°ch xe");
    }
}
const getQuenMK =(req,res)=>{
    res.render("quenmk", { message: null });
}
const rePassWord =async(req,res)=>{
    const {usernameRepass,emailRepass} = req.body;
    let result=await checkUserEmail(usernameRepass,emailRepass);
    if(!result){
        console.log("‚ùå T√†i kho·∫£n ho·∫∑c email kh√¥ng ch√≠nh x√°c!");
        return res.render("quenmk", { message: "‚ö†Ô∏è T√†i kho·∫£n ho·∫∑c email kh√¥ng ch√≠nh x√°c!" });
    }
    // T·∫°o m√£ x√°c nh·∫≠n v√† g·ª≠i email
    let secretCode = await pullCode(usernameRepass, emailRepass);
    let emailResult = await guiEmail(emailRepass, secretCode);
    
    res.render("nhapcode", { emailRepass,message:null});
}

const postGuiCode =async(req,res)=>{
    const  {emailRepass,code} = req.body;
    let result = await getRepassCode(emailRepass,code);
    if(!result){
        res.render("nhapcode",{ emailRepass,message: "‚ö†Ô∏è M√£ x√°c nh·∫≠n kh√¥ng ch√≠nh x√°c!" })
    }
    res.render("datlaiMK",{emailRepass,message:null});

}
const postDatMK=async(req,res)=>{
    const {emailRepass,password,repassword} = req.body;
    if(password=="" || repassword==""){
        res.render("datlaimk",{emailRepass,message:"‚ö†Ô∏è Kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng m·∫≠t kh·∫©u!"});
    }else if(repassword != password){
        res.render("datlaimk",{emailRepass,message:"‚ö†Ô∏è 2 m·∫≠t kh·∫©u ch∆∞a gi·ªëng nhau!"});
    }else if(password==repassword){
        await setNewPass(emailRepass,password);
        console.log(`ƒê·ªïi m·∫≠t kh·∫©u email ${emailRepass} th√†nh ${password} th√†nh c√¥ng!` );
        return res.send(`<script>
            alert("ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!");
            window.location.href = "/dangnhap"; 
        </script>`);
    }


}

const getLienHe=(req,res)=>{
    res.render("lienhe");
}

const postLienHe=(req,res)=>{
    const {name,email,message}=req.body;
    console.log("check>>>>",req.body);
}

const timKiemSanPham = async(req, res) => {
    const tenSP = req.body.tenSP;
    const cars = await searchCar(tenSP);
  
    res.render("timkiem", { cars }); 
};


const getChiTietSanPham = async (req, res) => {
    let carid = req.params.carid;
    
    // Lo·∫°i b·ªè d·∫•u `:` n·∫øu c√≥
    if (carid.startsWith(":")) {
        carid = carid.substring(1);
    }

    console.log("üîç carid sau khi x·ª≠ l√Ω:", carid); // Debug

    let detail = await getOneDetails(carid);
    let car = await getOneCar(carid);
    
    console.log("Th√¥ng tin chi ti·∫øt s·∫£n xe m√£: ",carid);
    res.render("chitietsp", { detail, car });
};



module.exports = { 
    logInserver, 
    getHomePage, 
    postCreateNewUser, 
    getCar, 
    getQuenMK, 
    rePassWord, 
    postGuiCode, 
    postDatMK, 
    getLienHe, 
    postLienHe, 
    timKiemSanPham,
    getChiTietSanPham
};
